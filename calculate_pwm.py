import numpy as np
import argparse
import os

def count_freq(f):
    freq = []
    for l in f:
        if l.startswith('>'):
            continue
        else:
            freq.append([l.strip()[i:i+2] for i in range(0, len(l.strip()), 2)])
    freq = np.array(freq)
    freq2 = np.where((freq=='AT')|(freq=='TA')|(freq=='AA')|(freq=='TT'), 1, 0)
#     freq2 = np.where((freq=='AA')|(freq=='GA')|(freq=='AG')|(freq=='GG'), 1, 0)
    return freq2.sum(0)/freq2.shape[0]

parser = argparse.ArgumentParser(
    description=""" """)
parser.add_argument(
    'seq_file', help='a bed file containing nucleosome sequences generated by infer_centers.py', type=str)
parser.add_argument(
    '--path', help='output directory, default = ./', default='./', type=str)
args = parser.parse_args()

f = open(args.seq_file)
freqs = count_freq(f)
pfm = np.vstack([freqs, (1-freqs)/3])
pwm = np.log2(pfm*4)
np.save(os.path.join(args.path, 'nuc_pwm'), pwm)